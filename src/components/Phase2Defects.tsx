import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { 
  AlertTriangle, 
  Bug, 
  Clock, 
  Zap,
  Shield,
  Eye,
  Radio,
  Settings
} from 'lucide-react';

interface DefectItem {
  id: string;
  title: string;
  description: string;
  severity: 'critical' | 'high' | 'medium' | 'low';
  category: 'connectivity' | 'ui' | 'data' | 'control' | 'performance';
  status: 'active' | 'investigating' | 'planned';
}

export const Phase2Defects: React.FC = () => {
  const defects: DefectItem[] = [
    {
      id: 'DEF-001',
      title: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
      description: 'API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç connected: false, –Ω–æ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏–∫–æ–π "–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å = –ø–æ–¥–∫–ª—é—á–µ–Ω"',
      severity: 'high',
      category: 'connectivity',
      status: 'investigating'
    },
    {
      id: 'DEF-002', 
      title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–Ω–æ–º',
      description: '–ö–Ω–æ–ø–∫–∏ ARM, DISARM, TAKEOFF, LAND –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ API –∫–æ–º–∞–Ω–¥–∞–º. –¢–æ–ª—å–∫–æ UI-–∑–∞–≥–ª—É—à–∫–∏.',
      severity: 'critical',
      category: 'control',
      status: 'planned'
    },
    {
      id: 'DEF-003',
      title: '–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏',
      description: '–ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å VPS/Jetson –Ω–µ—Ç fallback –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
      severity: 'high',
      category: 'connectivity', 
      status: 'active'
    },
    {
      id: 'DEF-004',
      title: '–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
      description: '–¢–µ–ª–µ–º–µ—Ç—Ä–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—Ä–æ–Ω–∞.',
      severity: 'medium',
      category: 'performance',
      status: 'active'
    },
    {
      id: 'DEF-005',
      title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö',
      description: '–ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –±–∞—Ç–∞—Ä–µ–∏, —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.',
      severity: 'medium',
      category: 'data',
      status: 'active'
    },
    {
      id: 'DEF-006',
      title: '–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏',
      description: '–ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ç—Ä–µ–Ω–¥–æ–≤ –∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.',
      severity: 'low',
      category: 'ui',
      status: 'planned'
    },
    {
      id: 'DEF-007',
      title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞–ª–µ—Ä—Ç—ã –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è',
      description: '–ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –Ω–∏–∑–∫–æ–º –∑–∞—Ä—è–¥–µ –±–∞—Ç–∞—Ä–µ–∏, –ø–æ—Ç–µ—Ä–µ GPS –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö.',
      severity: 'high',
      category: 'ui',
      status: 'active'
    },
    {
      id: 'DEF-008',
      title: 'Hardcoded device ID',
      description: 'ID –¥—Ä–æ–Ω–∞ "jetson_nano_real_001" –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω –≤ –∫–æ–¥–µ –≤–º–µ—Å—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è.',
      severity: 'medium',
      category: 'data',
      status: 'active'
    }
  ];

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return 'destructive';
      case 'high': return 'secondary';
      case 'medium': return 'outline';
      case 'low': return 'default';
      default: return 'default';
    }
  };

  const getSeverityIcon = (severity: string) => {
    switch (severity) {
      case 'critical': return <AlertTriangle className="h-4 w-4" />;
      case 'high': return <Bug className="h-4 w-4" />;
      case 'medium': return <Eye className="h-4 w-4" />;
      case 'low': return <Settings className="h-4 w-4" />;
      default: return <Bug className="h-4 w-4" />;
    }
  };

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'connectivity': return <Radio className="h-4 w-4" />;
      case 'control': return <Zap className="h-4 w-4" />;
      case 'data': return <Shield className="h-4 w-4" />;
      case 'ui': return <Eye className="h-4 w-4" />;
      case 'performance': return <Clock className="h-4 w-4" />;
      default: return <Bug className="h-4 w-4" />;
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active': return 'destructive';
      case 'investigating': return 'secondary';
      case 'planned': return 'outline';
      default: return 'default';
    }
  };

  const criticalCount = defects.filter(d => d.severity === 'critical').length;
  const highCount = defects.filter(d => d.severity === 'high').length;
  const activeCount = defects.filter(d => d.status === 'active').length;

  return (
    <div className="space-y-4">
      {/* Summary */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bug className="h-5 w-5" />
            üö® –î–µ—Ñ–µ–∫—Ç—ã –§–∞–∑—ã 2: Live Integration
          </CardTitle>
          <CardDescription>
            –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-destructive">{criticalCount}</div>
              <div className="text-sm text-muted-foreground">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-orange-500">{highCount}</div>
              <div className="text-sm text-muted-foreground">–í—ã—Å–æ–∫–∏–µ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-red-500">{activeCount}</div>
              <div className="text-sm text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã–µ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold">{defects.length}</div>
              <div className="text-sm text-muted-foreground">–í—Å–µ–≥–æ</div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Defects List */}
      <div className="space-y-3">
        {defects.map((defect) => (
          <Card key={defect.id} className="border-l-4 border-l-destructive">
            <CardHeader className="pb-3">
              <div className="flex items-start justify-between">
                <div className="flex items-start gap-3">
                  <div className="flex items-center gap-2">
                    {getSeverityIcon(defect.severity)}
                    {getCategoryIcon(defect.category)}
                  </div>
                  <div className="space-y-1">
                    <CardTitle className="text-base">{defect.title}</CardTitle>
                    <div className="flex items-center gap-2">
                      <Badge variant={getSeverityColor(defect.severity)}>
                        {defect.severity.toUpperCase()}
                      </Badge>
                      <Badge variant="outline">
                        {defect.category}
                      </Badge>
                      <Badge variant={getStatusColor(defect.status)}>
                        {defect.status}
                      </Badge>
                      <span className="text-xs text-muted-foreground">{defect.id}</span>
                    </div>
                  </div>
                </div>
              </div>
            </CardHeader>
            <CardContent className="pt-0">
              <p className="text-sm text-muted-foreground">{defect.description}</p>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Next Steps */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Zap className="h-5 w-5" />
            üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –§–∞–∑—ã 3
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="grid gap-2">
            <Button variant="outline" size="sm" className="justify-start">
              1. üéÆ –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–Ω–æ–º (ARM/DISARM/TAKEOFF/LAND)
            </Button>
            <Button variant="outline" size="sm" className="justify-start">
              2. üö® –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π  
            </Button>
            <Button variant="outline" size="sm" className="justify-start">
              3. üìä –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏
            </Button>
            <Button variant="outline" size="sm" className="justify-start">
              4. üõ°Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
            </Button>
            <Button variant="outline" size="sm" className="justify-start">
              5. üó∫Ô∏è –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∂–∏–≤—É—é –∫–∞—Ä—Ç—É —Å –ø–æ–∑–∏—Ü–∏–µ–π –¥—Ä–æ–Ω–∞
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};